list of methods
    get_data()
    get_montage
    get_channel_types

.eeg
    raw data
    eeg.get_data()

*_eeg.json
    meta data about task and eeg recording
    TaskName
        not actually sure where to get this from
        maybe behavioral data
        could also prompt user- should be a constant through the whole
        thing
    SamplingFrequency
        eeg.info['sfreq']
    SoftwareFilters
        required
        ??
    EEGChannelCount
        eeg.info['nchan']
    EOGChannelCount
        recommended
        ??
    EEGReference
        required
        ??
    ... lots more recommended but not required

*_channels.tsv
    file is *recommended*

    name
        label of channel
        required
        eeg.info['chs'][:]['ch_name']
    type
        required
        there's a list of accepted types
        we'll generally want 'EEG'
        could rip it programatically with something ugly like:
            str(eeg.info['chs'][:]['coil_type']).split('_')[-1][:-1]
            aha
            mne.channel_type(eeg.info, channel_number)
        dunno how generalizable that will be
    units
        required
        this seems so convoluted, but I don't see another way
            eeg.info['chs'][:]['unit']._name.split('_')[-1]
    ...

*_electrodes.tsv
    doesn't say if this is required

    name
        required
        x
        y
        z
            all required
            can parse the following:
                montage = eeg.get_montage()
                montage.get_positions()
            just have to make sure it's valid
        type
            recommended
            eg, cup, ring, clip on, wire, needle
            eeg.info['chs'][:]['coil_type']
        impedance
            recommended
            eeg.impedances
        ...

*_coordsystem.json
    if there's a *_electrodes.tsv, then there must be a *_coordsystem.json
        
    EEGCoordinateSystem
        required
        montage.get_positions()['coord_frame']
    EEGCoordinateUnits
        required
        don't see this in the object
        docs say that the montage object by default has meter 'm' units
    
dataset_description.json
    see the template file in this dir
    Name
        required
        name of the dataset
    BIDSVersion
        required
        the version of bids format that was used
    GeneratedBy
        -i think this is required for what's called 'generated' bids (as
         opposed to 'raw' bids, which i assume is what we're doing here
        - needs to be a list of dicts for each code generator used
        - each dict has keys:
            Name
                required
                name of pipeline or process used to generate BIDS
                in our case, 'Manual'
            Version
                recommended
                version of the pipeline
            CodeURL
                link to code base
    ...

--- PARTICIPANT FILES ---
these are only *recommended*

participants.tsv
    participant_id
        required
        format 'sub-<label>'
        must be unique, column must be first
    sex
    age
    handedness
        all optional

participants.json
    metadata explaining columns in the .tsv
    recommended structure:
        {
            'column_name': {
                'Description': 'Here is the description',
                'Levels': {
                    'M': 'Male',
                    'F': 'Female'
                }
            }
        }



--- end participants

okay i thought we had to deal with multiple sessions, but, after reading
their definitions
(https://bids-specification.readthedocs.io/en/stable/02-common-principles.html#units),
I think we're actually dealing with multiple *runs*

file naming convention:
    sub-<label>_task-<label>_run-<label>_<label>.<extension>
    

        

something about 'samples' files, ignoring for now
need to document sessions if subjects are run across multiple days (i
think)
just gets more esoteric from here



** misc
see eeg.impedances
all missing values get 'n/a'

